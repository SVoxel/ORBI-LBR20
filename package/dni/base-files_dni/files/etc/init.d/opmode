#!/bin/sh /etc/rc.common
START=20
. /lib/cfgmgr/cfgmgr.sh
. /lib/cfgmgr/opmode.sh

vlan_iptv_wl_enable()
{
	local i
	local value
	local wl

	local vlan_iptv_enable=$($CONFIG get i_opmode)

	case $vlan_iptv_enable in
	vlan)
		for i in 1 2 3 4 5 6 7 8 9 10; do
			value=$($CONFIG get vlan_tag_$i)
			if [ "x$value" = "x" ] ;then
				break
			fi
			wl=`echo $value|awk '{print $6}'`
			[ "x$wl" != "x0" ] && return 0
		done
		;;
	iptv)
		[ "$($CONFIG get wan_brig_ssid1)" = "1" ] && return 0
		[ "$($CONFIG get wan_brig_ssid2)" = "1" ] && return 0
		[ "$($CONFIG get wan_brig_guest_ssid1)" = "1" ] && return 0
		[ "$($CONFIG get wan_brig_guest_ssid2)" = "1" ] && return 0

	;;
	*) return 1 ;;
	esac
	return 1
}

bridge_stop_nss()
{
	case "$($CONFIG get i_opmode)" in
	apmode|extmode)
		return 0
		;;
	*)
		return 1
		;;
	esac
}

start_stage0() # $1: boot/start
{
	#[ $($CONFIG get ap_mode) = "1" ] && $CONFIG set i_opmode=apmode || $CONFIG set i_opmode=normal
	#[ $($CONFIG get enable_vlan) = "1" ] && $CONFIG set i_opmode=vlan || $CONFIG set i_opmode=normal

	op_set_induced_configs
	op_create_brs_and_vifs
	
	#For AP mode and Bridge mode turn off access control
	local opmode=$($CONFIG get i_opmode)
	if [ "$opmode" = "apmode"  -o "$opmode" = "brmode" ]; then
		$CONFIG set enable_block_device=0
	else
		[ "x$($CONFIG get old_enable_acl_status)" != "x" ] && $CONFIG set enable_block_device=$($CONFIG get old_enable_acl_status)
	fi
	
	if [ "x`/bin/config get dgc_func_have_circle`" = "x1" ]; then
	#For AP mode circled no start
	if [ "$1" != "boot" ]; then
		if [ "$opmode" = "apmode"  -o "$opmode" = "brmode" ]; then
			if [ "$($CONFIG get enable_circle_plc)" = 1 ]; then
				/mnt/circle/shares/usr/bin/stopcircle orbi
				echo 1 > /sys/kernel/debug/circle_pcc/unregister
				rmmod circle_pcc
			fi
			killall circled
		else
			if [ "x`ps |grep circled |grep -v grep`" = "x" ]; then
				local partition_type=`cat /flash_type`
				local mount_dev=`part_dev circle`
				if [ "x$partition_type" != "xEMMC" ]; then
					ubidev=$(ubinfo -a | grep -B5 vol_circle | sed -nr 's/Volume ID:.*\(on (ubi.*)\)/\1/p')
					if [ "$ubidev" = "" -a "$(ubinfo -a | grep vol_ntgrdata)" != "" ]; then
						have_vol_ntgrdata=1
						argv_part=
					else
						argv_part="-U $ubidev"
					fi
				else
					local partition_num=`echo "$mount_dev" | awk -F '/' '{printf $3}'`
					argv_part="-P $partition_num"
				fi
				local router_region=`artmtd -r region |grep REGION|awk -F ': ' '{print $2}'`
				if [ "x$router_region" != "xPR" ]; then
					/usr/bin/circled nostart $argv_part &
				fi
			fi
		fi
	fi
	fi

	if [ "x`/bin/config get dgc_func_have_armor`" = "x1" -a "$1" != "boot" ]; then
		if [ "$opmode" = "apmode"  -o "$opmode" = "brmode" ]; then
			/etc/init.d/ASH stop
			/opt/bitdefender/bin/bd_procd stop
			rmmod guster
		else
			/opt/bitdefender/bin/bd_procd start
			/etc/init.d/ASH start
			insmod guster
		fi
	fi

	case "$($CONFIG get i_opmode)" in
	normal|iptv|vlan)
		/etc/init.d/net-lan $1 mode
		echo "[net-wan $1]----------opmode-start_stage0----------"
		/etc/init.d/net-wan $1 mode
		;;
	*)
		/etc/init.d/net-br $1
        /etc/init.d/hyfi-bridging start
        wl2g_BACKHAUL_AP=`/bin/config get wl2g_BACKHAUL_AP`
        if [ "x$wl2g_BACKHAUL_AP" != "x" ]; then 
            echo "=====bridge up,should up backhaul ap $wl2g_BACKHAUL_AP first=======" > /dev/console
            ifconfig $wl2g_BACKHAUL_AP up
        fi
		;;
	esac

	if vlan_iptv_wl_enable || bridge_stop_nss; then
		/etc/init.d/qca-nss-ecm stop &
	fi

	local acld_pid=`ps | grep "acld" | grep -v "grep" |awk '{print $1}'`
        if [ "x$acld_pid" != "x" ]; then
		killall acld
		/usr/sbin/acld &
		sleep 1
		/etc/init.d/acl restart
        fi
		echo "0" > /proc/sys/net/ipv4/arp_attack_protect
}

stop0()
{
	case "$($CONFIG get i_opmode)" in
	normal|iptv|vlan)
		/etc/init.d/init6 stop
		echo "[net-wan stop]----------opmode-stop0----------"
		/etc/init.d/net-wan stop
		/etc/init.d/net-lan stop
		;;
	*)
		/etc/init.d/net-br stop
		;;
	esac
	#brctl delif br0 eth0
	op_del_all_brs_vifs

}

start()
{
	start_stage0 start
}

stop()
{
	#For AP mode and Bridge mode turn off access control
	if [ $($CONFIG get enable_block_device) = 1 ] && [ $($CONFIG get ap_mode) = 1 ]; then
		$CONFIG set enable_block_device=0
		$CONFIG set config_timestamp=$(date +%s)
		$CONFIG set soap_setting=AccessControl
		/usr/bin/killall -SIGUSR1 soap_agent
		sleep 10
	else
		#For Router mode which old_enable_acl_status value of 1 turn on access control
		if [ $($CONFIG get old_enable_acl_status) = 1 ]; then
			$CONFIG set enable_block_device=1
			$CONFIG set config_timestamp=$(date +%s)
			$CONFIG set soap_setting=AccessControl
			/usr/bin/killall -SIGUSR1 soap_agent
			sleep 10
		fi
	fi

        /etc/init.d/wlan-common stop

	stop0
}

restart()
{
	stop
	start
}

boot()
{
	#op_create_br0_brwan
	start_stage0 boot
}

