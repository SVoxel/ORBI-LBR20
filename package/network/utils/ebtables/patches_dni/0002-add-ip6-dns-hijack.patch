diff -Nur ebtables-v2.0.10-4.orig/extensions/ebt_ip6.c ebtables-v2.0.10-4/extensions/ebt_ip6.c
--- ebtables-v2.0.10-4.orig/extensions/ebt_ip6.c	2015-11-18 14:07:15.000000000 +0800
+++ ebtables-v2.0.10-4/extensions/ebt_ip6.c	2015-11-18 14:14:31.000000000 +0800
@@ -31,6 +31,7 @@
 #define IP_SPORT  '5'
 #define IP_DPORT  '6'
 #define IP_ICMP6  '7'
+#define IP_DNS_HIJACK '8'
 
 static const struct option opts[] =
 {
@@ -47,6 +48,7 @@
 	{ "ip6-destination-port" , required_argument, 0, IP_DPORT  },
 	{ "ip6-dport"            , required_argument, 0, IP_DPORT  },
 	{ "ip6-icmp-type"	 , required_argument, 0, IP_ICMP6  },
+	{ "ip6-dns-hijack"	 , no_argument, 0, IP_DNS_HIJACK  },
 	{ 0 }
 };
 
@@ -302,7 +304,8 @@
 "--ip6-proto  [!] protocol      : ipv6 protocol specification\n"
 "--ip6-sport  [!] port[:port]   : tcp/udp source port or port range\n"
 "--ip6-dport  [!] port[:port]   : tcp/udp destination port or port range\n"
-"--ip6-icmp-type [!] type[[:type]/code[:code]] : ipv6-icmp type/code or type/code range\n");
+"--ip6-icmp-type [!] type[[:type]/code[:code]] : ipv6-icmp type/code or type/code range\n"
+"--ip6-dns-hijack				: hijack some URL, such as www.routerlogin.net\n");
 print_icmpv6types();
 }
 
@@ -320,6 +323,7 @@
 #define OPT_PROTO  0x08
 #define OPT_SPORT  0x10
 #define OPT_DPORT  0x20
+#define OPT_DNS_HIJACK  0x40
 static int parse(int c, char **argv, int argc, const struct ebt_u_entry *entry,
    unsigned int *flags, struct ebt_entry_match **match)
 {
@@ -402,6 +406,12 @@
 		}
 		ipinfo->bitmask |= EBT_IP6_PROTO;
 		break;
+	case IP_DNS_HIJACK:
+		ebt_check_option2(flags, OPT_DNS_HIJACK);
+		ipinfo->bitmask |= EBT_IP6_DNS_HIJACK;
+		ipinfo->dns_hijack = 1;
+		break;
+
 	default:
 		return 0;
 	}
@@ -491,6 +501,8 @@
 			printf("! ");
 		print_icmp_type(ipinfo->icmpv6_type, ipinfo->icmpv6_code);
 	}
+	if (ipinfo->bitmask & EBT_IP6_DNS_HIJACK)
+		printf("--ip6-dns-hijack");
 }
 
 static int compare(const struct ebt_entry_match *m1,
diff -Nur ebtables-v2.0.10-4.orig/include/linux/netfilter_bridge/ebt_ip6.h ebtables-v2.0.10-4/include/linux/netfilter_bridge/ebt_ip6.h
--- ebtables-v2.0.10-4.orig/include/linux/netfilter_bridge/ebt_ip6.h	2015-11-18 14:07:15.000000000 +0800
+++ ebtables-v2.0.10-4/include/linux/netfilter_bridge/ebt_ip6.h	2015-11-18 14:13:37.000000000 +0800
@@ -21,10 +21,11 @@
 #define EBT_IP6_SPORT 0x10
 #define EBT_IP6_DPORT 0x20
 #define EBT_IP6_ICMP6 0x40
+#define EBT_IP6_DNS_HIJACK 0x80
 
 #define EBT_IP6_MASK (EBT_IP6_SOURCE | EBT_IP6_DEST | EBT_IP6_TCLASS |\
 		      EBT_IP6_PROTO | EBT_IP6_SPORT | EBT_IP6_DPORT | \
-		      EBT_IP6_ICMP6)
+		      EBT_IP6_ICMP6 | EBT_IP6_DNS_HIJACK)
 #define EBT_IP6_MATCH "ip6"
 
 /* the same values are used for the invflags */
@@ -33,9 +34,10 @@
 	struct in6_addr daddr;
 	struct in6_addr smsk;
 	struct in6_addr dmsk;
+	__be32  bitmask;
 	__u8  tclass;
 	__u8  protocol;
-	__u8  bitmask;
+//	__u8  bitmask;
 	__u8  invflags;
 	union {
 		__u16 sport[2];
@@ -45,6 +47,7 @@
 		__u16 dport[2];
 		__u8 icmpv6_code[2];
 	};
+	__be32  dns_hijack;
 };
 
 #endif
