#device_type should be router or extender,default is router,please define it at datalib
device_type=`/bin/config get wl_conf_mode`
if [ "x$device_type" = "x2" ];then
    DEVICE_TYPE="extender"
    DBDC_ENABLE=1

    [ -f "/tmp/orbi_type" ] && product_type=`/bin/cat /tmp/orbi_type`
        if [ "$product_type" = "Satellite" ]; then
            DEVICE_TYPE="satellite"
            DBDC_ENABLE=0
        fi
else
    DEVICE_TYPE="router"
    DBDC_ENABLE=0
fi
EXPERIMENTAL="off"
vht_11ng="off"
g_device="wifi0"
a_device="wifi1"
a2_device="wifi2"
vpn_ifname="tun0"
wifi0_prefix=wl
wifi1_prefix=wla
wifi2_prefix=wla_2nd

#Fronthaul Radio interface define
#example: "wifi0 wifi1"
fronthaul_radio=

g_led_num=17
a_led_num=17

[ -f /proc/bus/pci/devices ] && {
  local _wl_num=`cat /proc/bus/pci/devices | grep 168c | wc -l`
  if [ $_wl_num -ge 2 ]; then
      wla_exist="on"
  else
      wla_exist="off"
  fi
  wlg_exist="on"
} || {
  wlg_exist="on"
  wla_exist="off"
}

wlg_exist="on"
wla_exist="on"
wla2_exist="off"
wig_exist="off"
wig_device="radio0"
WIFI_TOPOLOGY_FILE=/tmp/wifi_topology
USE_QCA_SECTION_RULE=0

wlg_country=`/bin/config get wl_country`
wla_country=`/bin/config get wla_country`
grep "^$wlg_country$" /etc/ath/non_limit_country.conf > /dev/null 2>&1
if [ "$?" = "0" ]; then
  wlg_power_limit=0
else
  wlg_power_limit=1
fi
grep "^$wla_country$" /etc/ath/non_limit_country.conf > /dev/null 2>&1
if [ "$?" = "0" ]; then
  wla_power_limit=0
else
  wla_power_limit=1
fi

#nf_baseline parameters
g_nf_baseline=-102
a_nf_baseline=-104
a2_nf_baseline=-104

#NTGR ACS parameters
acs_mindwell=500

# NTGR Vendor IE
# Specific Vendor IE for different products here
vie_oui=
vie_flag=

#The setting of no weather channel argument.
#According to NTGR's request, 5G radio can't randomly switch to weather channel
#when 5G radio detect to radar in EUROPE region.
#wla_no_wradar=1 means turn on the function that doesn't switch to weather channel.
if [ $wla_country -eq 4 ];then
    wla_no_wradar=1
else
    wla_no_wradar=0
fi

#Tri-band
g_sameSSID="True"

#Force create VAP setting
FORCE_CREATE_wlg_guest_VAP="on"
FORCE_CREATE_wla_guest_VAP="on"
FORCE_CREATE_wla2_guest_VAP="off"
FORCE_CREATE_wlg_byod_VAP="off"
FORCE_CREATE_wla_byod_VAP="off"
FORCE_CREATE_wla2_byod_VAP="off"
FORCE_CREATE_wla2_VAP="off"

#This parameter is the switch to turn on/off thermaltool daemon.
thermal_analytics=1

#Since /sbin/thermaltool.sh has an attribute to record thermal sensor name.
#there is a simple table to arrange the info for each Orbi project.
#and according to different project, to add different value in different dni_home local patch in /etc/ath/wifi.conf .
#Take Orbi-desktop for example, it will 4 parameter in /etc/ath/wifi.conf:
#VendorChipName_wifi0=dakota-wifi0
#VendorChipName_wifi1=dakota-wifi1
#VendorChipName_wifi2=cascade-wifi2
#Onboard_sensor_name=    (if this project has onboard sensor, it will has a value.)
#optEnable="True" (if it is True, DUT will be triggered different performance level when thermal sensor detects to be threshold temperature.)
#heaterEnable"True" (if it is True, DUT had heater function.)

#             | onboard sensor        | wifi0  | wifi1  | wifi2   | optEnable | heaterEnable |
#-------------|-----------------------|--------|--------|---------|-----------|--------------|
#Orbi-desktop |    none               | dakota | dakota | cascade |  True     | False        |
#-------------|-----------------------|--------|--------|---------|-----------|--------------|
#Orbi-mini    |    none               | dakota | dakota | besra   |  True     | False        |
#-------------|-----------------------|--------|--------|---------|-----------|--------------|
#Orbi-pro     |    none               | dakota | dakota | cascade |  True     | False        |
#-------------|-----------------------|--------|--------|---------|-----------|--------------|
#Orbi-micro   |  onboard-flash        | dakota | dakota | besra   |  True     | False        |
#-------------|-----------------------|--------|--------|---------|-----------|--------------|
#Orbi-outdoor |  onboard-DK-Cascade   | dakota | dakota | cascade |  False    | True         |
#-------------|-----------------------|--------|--------|---------|-----------|--------------|

#WIFI_CONF_nss_wifi_olcfg=1
#WIFI_CONF_nss_wifi_olnum=1

